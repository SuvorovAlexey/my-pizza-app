{"version":3,"sources":["components/ItemMenu/ItemMenu.module.css","containers/Menu/Menu.module.css","components/MenuWrapper/MenuWrapper.module.css","components/Popup/PopupDone.module.css","data/img/pizza/1.jpg","data/img/pizza/2.jpg","data/img/pizza/9.jpg","data/img/pizza/8.jpg","data/img/pizza/3.jpg","data/img/pizza/5.jpg","data/img/pizza/6.jpg","data/img/pizza/4.jpg","data/img/pizza/7.jpg","data/img/icons/pizzamaker.png","components/ItemMenu/ItemMenu.js","components/MenuWrapper/MenuWrapper.js","components/Cart/Cart.js","api/fetchPizza.js","components/Popup/PopupDone.js","containers/Menu/Menu.js","hoc/Layout/Layout.js","containers/StartPage/StartPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ItemMenuSkeleton","className","styles","ItemMenu","skeletonImg","skeletonDiv","disabled","skeletonButton","props","cls","menu","spicy","push","join","image","src","name","price","onClick","orderHandler","MenuWrapper","test","map","item","index","key","id","Array","fill","_","i","Cart","discount","cart","orderedItems","toFixed","delivery","ClearCart","showPopup","fetchPizza","Promise","res","rej","setTimeout","MargaritaImage","MexicanImage","FourCheeseImage","AmericanImage","RussianImage","ItalianImage","IndianImage","SeafoodImage","SpicyImage","PopupDone","PopupContent","to","pizzamaker","Menu","state","isOrdered","itemPizza","setState","ClearCartHandler","this","MenuLink","total","Component","Layout","children","StartPage","App","path","component","exact","Boolean","window","location","hostname","match","application","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ba38a66e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemMenu\":\"ItemMenu_ItemMenu__3pwzf\",\"image\":\"ItemMenu_image__30WvW\",\"spicy\":\"ItemMenu_spicy__2pJpS\",\"skeletonImg\":\"ItemMenu_skeletonImg__3BQeb\",\"skeletonDiv\":\"ItemMenu_skeletonDiv__TcpAi\",\"blinker\":\"ItemMenu_blinker__2CjiL\",\"skeletonButton\":\"ItemMenu_skeletonButton__1T5nV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__3Mx9W\",\"MenuLink\":\"Menu_MenuLink__2xAFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuWrapper\":\"MenuWrapper_MenuWrapper__of6dU\",\"test\":\"MenuWrapper_test__1CAg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PopupDone\":\"PopupDone_PopupDone__3WNei\",\"PopupContent\":\"PopupDone_PopupContent__1u-cC\"};","module.exports = __webpack_public_path__ + \"static/media/1.c20a24ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.b8eced65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.8ecf8c70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.73a2dad5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.9bcbff96.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.f60eab94.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.d978f221.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.2645e78e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.9c4b0f03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizzamaker.29fbb410.png\";","import React from 'react'\r\nimport styles from './ItemMenu.module.css'\r\n\r\nconst ItemMenu = (props) => {\r\n\r\n    const cls = [styles.ItemMenu]\r\n\r\n    if (props.menu.spicy === true) {\r\n        cls.push(styles.spicy)\r\n    }\r\n\r\n    return(\r\n        <div className={cls.join(' ')}> \r\n            {props.menu.image && <img className={styles.image} src={props.menu.image} />}\r\n            <p>{props.menu.name}</p>\r\n            <p>price: {props.menu.price} $</p>\r\n            <button onClick={ () => {props.orderHandler(props.menu)} }>Order</button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport const ItemMenuSkeleton = () => {\r\n    return(\r\n        <div className={styles.ItemMenu}> \r\n            <div className={styles.skeletonImg}>  </div>\r\n            <div className={styles.skeletonDiv}> </div>\r\n            <div className={styles.skeletonDiv}>  </div>\r\n            <button disabled className={styles.skeletonButton}>Order</button>\r\n        </div>\r\n    )\r\n}\r\nexport default ItemMenu","import React from 'react'\r\nimport styles from './MenuWrapper.module.css'\r\nimport ItemMenu, {ItemMenuSkeleton} from '../ItemMenu/ItemMenu'\r\n\r\nconst MenuWrapper = (props) => {\r\n    return(\r\n        <div className={styles.MenuWrapper}> \r\n            <div className={styles.test}></div>\r\n\r\n            {props.menu ?   //if menu has loaded\r\n\r\n                props.menu.map( (item, index) => {  //show menu\r\n                    return(\r\n                        <ItemMenu \r\n                            key={item.id}\r\n                            menu = {item}\r\n                            orderHandler = {props.orderHandler}\r\n                        />\r\n                    )\r\n                } )\r\n\r\n\r\n                : Array(9).fill(1).map((_, i) => (  //else show skeletons\r\n                    <ItemMenuSkeleton key={i} />\r\n                ))\r\n\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuWrapper","import React from 'react'\r\nimport './Cart.modules.css'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const discount = ['discount']\r\n\r\n    if(props.cart > 10){\r\n        discount.push('greenlabel')\r\n    }\r\n    else{\r\n        discount.push('redlabel')\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className='Cart'>\r\n            Your order: \r\n             <p>pizza amount: {props.orderedItems}</p> \r\n             <p>pizza cost: {(props.cart.toFixed(1))} $</p>\r\n             <p>delivery: {props.cart > 10 ? 0 : props.delivery} $</p>\r\n             <p>total:  { props.cart === 0 ? 0 : (props.delivery + props.cart >= 10 ? (props.cart).toFixed(1) : (props.cart + props.delivery).toFixed(1))} $</p>\r\n            <p className={discount.join(' ')}>Free delivery for total orders > 10 $</p>\r\n            <button onClick={ ()=> props.ClearCart() }>Clear cart</button>\r\n            {props.cart === 0 ? null : <button onClick={()=> props.showPopup()}>Make order</button>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart","import MargaritaImage from './../data/img/pizza/1.jpg'\r\nimport MexicanImage from './../data/img/pizza/2.jpg'\r\nimport FourCheeseImage from './../data/img/pizza/9.jpg'\r\nimport AmericanImage from './../data/img/pizza/8.jpg'\r\nimport RussianImage from './../data/img/pizza/3.jpg'\r\nimport ItalianImage from './../data/img/pizza/5.jpg'\r\nimport SeafoodImage from './../data/img/pizza/6.jpg'\r\nimport IndianImage from './../data/img/pizza/4.jpg'\r\nimport SpicyImage from './../data/img/pizza/7.jpg'\r\n\r\n\r\nconst fetchPizza = () => new Promise((res, rej) => {    //emulation server request. delay - 2 seconds\r\n    setTimeout(() => {\r\n        res([\r\n            {id: 1, name: 'Margarita', price: 2.5, spicy: false, image: MargaritaImage},\r\n            {id: 2, name: 'Mexican', price: 3.6, spicy: true, image: MexicanImage},\r\n            {id: 3, name: '4 cheese', price: 2.9, spicy: false, image: FourCheeseImage},\r\n            {id: 4, name: 'American', price: 3.5, spicy: true, image: AmericanImage},\r\n            {id: 5, name: 'Russian', price: 2.8, spicy: false, image: RussianImage},\r\n            {id: 6, name: 'Italian', price: 2.2, spicy: false, image: ItalianImage},\r\n            {id: 7, name: 'Indian', price: 2.1, spicy: true, image: IndianImage},\r\n            {id: 8, name: 'Seafood pizza', price: 3.6, spicy: false, image: SeafoodImage},\r\n            {id: 9, name: 'Super spicy pizza', price: 3.6, spicy: true, image: SpicyImage}\r\n        ]);\r\n    }, 2000);\r\n})\r\n\r\nexport default fetchPizza","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport styles from './PopupDone.module.css'\r\nimport pizzamaker from '../../data/img/icons/pizzamaker.png'\r\n\r\nconst PopupDone = () => {\r\n    return(\r\n        <div className={styles.PopupContent}>\r\n            <div className={styles.PopupDone}>\r\n                <p>Thank you for order!</p>\r\n                <p>We started to cook for you.</p>\r\n                <NavLink to='../'>to main</NavLink>\r\n                <img src={pizzamaker}></img>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default PopupDone","import React,{Component} from 'react'\r\nimport styles from './Menu.module.css'\r\nimport MenuWrapper from '../../components/MenuWrapper/MenuWrapper'\r\nimport Cart from '../../components/Cart/Cart'\r\nimport {NavLink} from 'react-router-dom'\r\nimport fetchPizza from '../../api/fetchPizza'\r\nimport PopupDone from '../../components/Popup/PopupDone'\r\n\r\n\r\n\r\n\r\nclass Menu extends Component {\r\n\r\n    state = {\r\n        menu: null,\r\n        cart: 0,   //final price\r\n        orderedItems: 0,  //pizza amount\r\n        delivery: 1.2,\r\n        isOrdered: false\r\n    }\r\n\r\n    async componentDidMount() {     //componentDidMount calls aster render of component.\r\n        const menu = await fetchPizza();    //emulation server request (from src -> api -> fetchPizza.js)\r\n        this.setState({menu});\r\n    }\r\n\r\n    orderHandler = (itemPizza) => {    //function of order pizza\r\n        this.setState(state => ({\r\n            cart: state.cart + itemPizza.price,\r\n            orderedItems: state.orderedItems + 1\r\n        }))       \r\n    }\r\n\r\n    ClearCartHandler = () => {  //function of clear cart\r\n        this.setState({\r\n            cart: 0,\r\n            delivery: 1.2,\r\n            orderedItems: 0\r\n        })\r\n    }\r\n\r\n    showPopup = () => { //function of showing popup window (after order)\r\n        this.setState({\r\n            isOrdered: !this.state.isOrdered\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const { menu } = this.state;\r\n        return(\r\n                <div className={styles.Menu}>\r\n\r\n                        {this.state.isOrdered === true? <PopupDone /> : null}\r\n                        \r\n                        <h1>Menu</h1>\r\n\r\n                        <NavLink to='../' className={styles.MenuLink}>Back to main</NavLink>\r\n\r\n                        <Cart \r\n                            cart={this.state.cart}\r\n                            delivery={this.state.delivery}\r\n                            total={this.state.total}\r\n                            orderedItems={this.state.orderedItems}\r\n                            ClearCart={this.ClearCartHandler}\r\n                            showPopup={this.showPopup} \r\n                        />\r\n\r\n                        \r\n                         <MenuWrapper \r\n                            menu={menu}\r\n                            orderHandler = {this.orderHandler}\r\n                        />\r\n                         \r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu","import React,{Component} from 'react'\r\nimport './Layout.modules.css'\r\nimport Menu from '../../containers/Menu/Menu'\r\n\r\nclass Layout extends Component { //this is higher order component. This component makes layout.\r\n    render() {\r\n        return(\r\n            <div className='Layout'>\r\n\r\n                <main>       {/*in main put all content*/}\r\n                    {this.props.children}\r\n                </main> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React, {Component} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport './StartPage.modules.css'\r\n\r\nclass StartPage extends Component {   //I make this component as class component because in future this component will be more dificult and maybe it will need state\r\n    render() {\r\n        return(\r\n            \r\n            <div className='StartPage'>\r\n                <h1>Welcome to Tasty Pizza!</h1>\r\n                <p>Please, click on the link bellow to go to the menu.</p>\r\n                <NavLink to='/menu'>Go to menu!</NavLink>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default StartPage","import React from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport {Route, Switch} from 'react-router-dom'\nimport Menu from './containers/Menu/Menu'\nimport StartPage from './containers/StartPage/StartPage'\n\n\nfunction App() {\n  return (\n      <Layout>\n        <Switch>\n          \n          <Route path='/my-pizza-app/menu' component={Menu} exact/>\n          <Route path='/my-pizza-app' component={StartPage} exact/>\n          \n        </Switch>\n      </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nconst application = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(\n  \n    application\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}